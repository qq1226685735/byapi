<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.hh.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="commentcontent" jdbcType="VARCHAR" property="commentcontent" />
    <result column="newid" jdbcType="INTEGER" property="newid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
  </resultMap>
  <resultMap id="BaseResultMapWithNew" type="com.hh.entity.CommentWithNew">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="commentcontent" jdbcType="VARCHAR" property="commentcontent" />
    <result column="newid" jdbcType="INTEGER" property="newid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="newtitle" jdbcType="VARCHAR" property="newtitle" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, commentcontent, newid, date
  </sql>
  <sql id="Has_Newtitle">
    comments.id, comments.userid,  comments.commentcontent,  comments.newid,  comments.date,news.newtitle
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCommentByNumber"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comments  where newid=#{2} order by id desc LIMIT #{0},#{1}
  </select>
  <select id="selectByUserId"  resultMap="BaseResultMapWithNew">
    select
    <include refid="Has_Newtitle" />
    from comments  left join news on comments.newid=news.id where comments.userid=#{2}  order by comments.id desc LIMIT #{0},#{1}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete a,b from comments a inner join commentadmires b on a.id=b.commentid
    where a.id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hh.entity.Comment">
    insert into comments (id, userid, commentcontent, 
      newid, date)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{commentcontent,jdbcType=VARCHAR}, 
      #{newid,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hh.entity.Comment">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="commentcontent != null">
        commentcontent,
      </if>
      <if test="newid != null">
        newid,
      </if>
      <if test="date != null">
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="newid != null">
        #{newid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hh.entity.Comment">
    update comments
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null">
        commentcontent = #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="newid != null">
        newid = #{newid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hh.entity.Comment">
    update comments
    set userid = #{userid,jdbcType=INTEGER},
      commentcontent = #{commentcontent,jdbcType=VARCHAR},
      newid = #{newid,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>